架构题 1:
一套业务系统, 由数据库(mysql, redis 和 postgres), api 网关服务, 各类处理业务的微服务, 前端组成

任务一:
请基于容器设计一套业务系统


任务二:
不采用容器和虚拟机, 基于 pacemaker+corosync 和 haproxy 等组件设计一套业务系统


要求:
1.整个系统无单点故障, 出现故障在秒内完成切换
2.系统的所有业务做到负载均衡, 业务压测时压力平均分配
3.整个系统待机,硬件故障和任何一个服务出现问题, 系统不受影响
4.整个系统资源消耗尽可能少
5.系统安全尽可能的考虑

架构题 2:
三节点的 k8s, master 和 worker 共享三节点(3 master + 3 worker), 当把其中一台(也正好是 etcd master 节点)直接断电后, k8s 需要一段时间来恢复工作, 这个收敛时间如何分布? 如何优化收敛时间?
检查收敛时间:
kubectl 命令恢复工作的收敛时间, e.g 通过观察 kubectl get node
service 接通 new pod (在断电时 schedule 到其他节点的 new pod)的收敛时间, 通过持续 curl url 观察.
